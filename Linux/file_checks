#!/bin/bash
#File Checks

#Check root permissions
if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root" 
    exit 1
fi

#Check if files exist
if [[ ! -d orig ]]; then
    echo "orig directory does not exist"
    exit 1
fi

#STARTUP
cp orig/passwd.orig current/passwd.current
cp orig/group.orig current/group.current
cp orig/sudoers.orig current/sudoers.current
cp orig/services.orig current/services.current
cp orig/setxid.orig current/setxid.current
cp orig/sshd_config.orig current/sshd_config.current
cp orig/authorized_keys.md5.orig current/authorized_keys.md5.current
cp orig/timers.orig current/timers.current
cp orig/hosts.orig current/hosts.current

FINDARGS="( -path /proc -o -path /sys -o -path /dev -o -path /mnt ) -prune -o"
LOGFILE="logs/file_changes_$(date +%Y%m%d_%H%M%S).log"

#FUNCTION FOR MD5SUM ONLY
function md5trim() {
    md5sum $1 | awk '{ print $1 }'
}

#FUNCTION PREPENDS TIMESTAMP
function techo() {
    echo $1 | awk '{ printf("%s %s\n", strftime("%c", systime()), $0) }'
}

#FUNCTION HANDLES SIGINT
function handle_sigint() {
    techo "[SCRIPT INTERRUPTED]" | tee -a "$LOGFILE"
    exit 1
}

trap handle_sigint SIGINT

#MAIN LOOP
while true; do
    #SETXID BINARY CHECK TO SETXID.NOW
    find / $FINDARGS -type f -perm /6000 -print > now/setxid.now 2>/dev/null 

    #SERVICE LIST CHECK TO SERVICES.NOW
    systemctl list-unit-files --type=service --state=enabled --no-pager > now/services.now 2>/dev/null
    
    #TIMERS LIST CHECK TO TIMERS.NOW
    systemctl list-unit-files --type=timer --state=enabled --no-pager > now/timers.now 2>/dev/null

    #SUDOERS.D TO SUDOERS.NOW
    cp /etc/sudoers now/sudoers.now && cat /etc/sudoers.d/* >> now/sudoers.now 2>/dev/null

    #SSHD_CONFIG.D TO SSHD_CONFIG.NOW
    cp /etc/ssh/sshd_config now/sshd_config.now && cat /etc/ssh/sshd_config.d/* >> now/sshd_config.now 2>/dev/null

    #AUTHORIZED_KEYS TO AUTHORIZED_KEYS.MD5.NOW
    ##might cause issues
    #find / $FINDARGS -type f -name authorized_keys -exec md5sum {} >> now/authorized_keys.md5.now \; 2>/dev/null

    #HOSTS TO HOSTS.NOW
    cp /etc/hosts now/hosts.now && cat /etc/hosts.allow /etc/hosts.deny >> now/hosts.now 2>/dev/null

    #PASSWD LOOP
    if [[ "$(md5trim current/passwd.current)" != "$(md5trim /etc/passwd)" ]]; then
        techo "[PASSWD MODIFIED]"
        echo "OLD is LEFT -- NEW is RIGHT"
        diff -y --suppress-common-lines current/passwd.current /etc/passwd
        cp /etc/passwd current/passwd.current
    fi

    #GROUP LOOP
    if [[ "$(md5trim current/group.current)" != "$(md5trim /etc/group)" ]]; then
        techo "[GROUP MODIFIED]"
        echo "OLD is LEFT -- NEW is RIGHT"
        diff -y --suppress-common-lines current/group.current /etc/group
        cp /etc/group current/group.current
    fi

    #SUDOERS LOOP
    if [[ "$(md5trim current/sudoers.current)" != "$(md5trim now/sudoers.now)" ]]; then
        techo "[SUDOERS MODIFIED]"
        echo "OLD is LEFT -- NEW is RIGHT"
        diff -y --suppress-common-lines current/sudoers.current now/sudoers.now
        cp now/sudoers.now current/sudoers.current
    fi

    #SERVICES LOOP
    if [[ "$(md5trim current/services.current)" != "$(md5trim now/services.now)" ]]; then
        techo "[SERVICES MODIFIED]"
        echo "OLD is LEFT -- NEW is RIGHT"
        diff -y --suppress-common-lines current/services.current now/services.now
        cp now/services.now current/services.current
    fi

    #SETXID LOOP
    if [[ "$(md5trim current/setxid.current)" != "$(md5trim now/setxid.now)" ]]; then
        techo "[SETXID BINARIES MODIFIED]"
        echo "OLD is LEFT -- NEW is RIGHT"
        diff -y --suppress-common-lines current/setxid.current now/setxid.now
        cp now/setxid.now current/setxid.current
    fi

    #SSHD_CONFIG LOOP
    if [[ "$(md5trim current/sshd_config.current)" != "$(md5trim now/sshd_config.now)" ]]; then
        techo "[SSHD_CONFIG MODIFIED]"
        echo "OLD is LEFT -- NEW is RIGHT"
        diff -y --suppress-common-lines current/sshd_config.current now/sshd_config.now
        cp now/sshd_config.now current/sshd_config.current
    fi

    #AUTHORIZED_KEYS LOOP
    #if [[ "$(md5trim current/authorized_keys.md5.current)" != "$(md5trim now/authorized_keys.md5.now)" ]]; then
    #    techo "[AUTHORIZED_KEYS MODIFIED]"
    #    echo "OLD is LEFT -- NEW is RIGHT"
    #    diff -y --suppress-common-lines current/authorized_keys.md5.current now/authorized_keys.md5.now
    #    cp now/authorized_keys.md5.now current/authorized_keys.md5.current
    #
    #fi

    #AUTHORIZED_KEYS LOOP2
    #find / $FINDARGS -type f -name authorized_keys -exec if [ SUM=$(md5sum {}) != "$(grep -v -f current/authorized_keys.md5.current)" ]; then techo "[AUTHORIZED_KEYS MODIFIED]" && echo $SUM | tee -a current/authorized_keys.md5.current; fi \; 2>/dev/null
    #BROKEN
    #find / $FINDARGS -type f -name authorized_keys -exec bash -c 'if ! grep -q $(md5sum "{}" | cut -d" " -f1) current/authorized_keys.md5.current; then techo "[AUTHORIZED_KEYS MODIFIED]" && md5sum "{}" | tee -a current/authorized_keys.md5.current; fi' \; 2>/dev/null
    
    #TIMERS LOOP
    if [[ "$(md5trim current/timers.current)" != "$(md5trim now/timers.now)" ]]; then
        techo "[TIMERS MODIFIED]"
        echo "OLD is LEFT -- NEW is RIGHT"
        diff -y --suppress-common-lines current/timers.current now/timers.now
        cp now/timers.now current/timers.current
    fi

    #TODO: CRONTAB
    
    #HOSTS LOOP
    if [[ "$(md5trim current/hosts.current)" != "$(md5trim now/hosts.now)" ]]; then
        techo "[HOSTS MODIFIED]"
        echo "OLD is LEFT -- NEW is RIGHT"
        diff -y --suppress-common-lines current/hosts.current now/hosts.now
        cp now/hosts.now current/hosts.current
    fi

    #TODO: ADD ADDITIONAL CONFIGS
    
    
    #WAIT 1 SECONDS
    sleep 1

    #LOG OUTPUT

done | tee -a "$LOGFILE"
